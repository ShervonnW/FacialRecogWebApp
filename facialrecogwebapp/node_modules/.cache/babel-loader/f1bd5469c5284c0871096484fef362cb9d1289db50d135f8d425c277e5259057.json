{"ast":null,"code":"var _jsxFileName = \"E:\\\\ZTMProjects\\\\FacialRecogApp\\\\facialrecogwebapp\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin.js';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifiRequestOptions = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the Account's Security section\n  const PAT = 'daa936fb4067482cb04eb292c5269f03';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = 'acc5n45nn80u';\n  const APP_ID = 'FaceDetection';\n  // Change these to whatever model and image URL you want to use\n  const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    // onButtonSubmit = () => {\n    //   this.setState({imageUrl: this.state.input});\n    //   //app.models.predict('face-detection', this.state.input)\n    //   fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' +  \"/outputs\", returnClarifiRequestOptions(this.state.input))\n    //       .then(response => response.json())\n    //         .then(response => {\n    //           console.log('hi', response)\n    //           if (response) {\n    //             fetch('http://localhost:3000/image', {\n    //               method: 'put',\n    //               headers: {'Content-Type':'application/json'},\n    //               body: JSON.stringify({\n    //                 id: this.state.user.id\n    //               })\n    //             })\n    //           }\n    //           this.displayFaceBox(this.calculateFaceLocation(response))\n    //         })\n    //         .catch(err => console.log(err));\n    // }\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifiRequestOptions(this.state.input)).then(response => response.json()).then(response => {\n        console.log('hi', response);\n        if (response) {\n          this.displayFaceBox(this.calculateFaceLocation(response));\n        } else {\n          console.error('Clarifai API error:', response.status.description);\n        }\n      }).catch(err => console.log(err));\n    };\n    this.onRouteChange = () => {\n      this.setState({\n        route: 'home'\n      });\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin'\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"polygon\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Signin","Logo","ImageLinkForm","FaceRecognition","Rank","ParticlesBg","jsxDEV","_jsxDEV","returnClarifiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","setState","onInputChange","event","input","target","value","onButtonSubmit","state","fetch","then","response","json","error","status","description","catch","err","onRouteChange","route","render","className","children","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["E:/ZTMProjects/FacialRecogApp/facialrecogwebapp/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin.js';\n\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport './App.css';\n\n\nconst returnClarifiRequestOptions = (imageUrl) => {\n  // Your PAT (Personal Access Token) can be found in the Account's Security section\nconst PAT = 'daa936fb4067482cb04eb292c5269f03';\n// Specify the correct user_id/app_id pairings\n// Since you're making inferences outside your app's scope\nconst USER_ID = 'acc5n45nn80u';       \nconst APP_ID = 'FaceDetection';\n// Change these to whatever model and image URL you want to use\nconst MODEL_ID = 'face-detection';   \nconst IMAGE_URL = imageUrl;\n\nconst raw = JSON.stringify({\n  \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n  },\n  \"inputs\": [\n      {\n          \"data\": {\n              \"image\": {\n                  \"url\": IMAGE_URL\n              }\n          }\n      }\n  ]\n});\nconst requestOptions = {\n  method: 'POST',\n  headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n  },\n  body: raw\n};\n\nreturn requestOptions;\n}\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin'\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box)\n    this.setState({box: box})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  // onButtonSubmit = () => {\n  //   this.setState({imageUrl: this.state.input});\n  //   //app.models.predict('face-detection', this.state.input)\n  //   fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' +  \"/outputs\", returnClarifiRequestOptions(this.state.input))\n  //       .then(response => response.json())\n  //         .then(response => {\n  //           console.log('hi', response)\n  //           if (response) {\n  //             fetch('http://localhost:3000/image', {\n  //               method: 'put',\n  //               headers: {'Content-Type':'application/json'},\n  //               body: JSON.stringify({\n  //                 id: this.state.user.id\n  //               })\n  //             })\n  //           }\n  //           this.displayFaceBox(this.calculateFaceLocation(response))\n  //         })\n  //         .catch(err => console.log(err));\n  \n  // }\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' +  \"/outputs\", returnClarifiRequestOptions(this.state.input))\n      .then(response => response.json())\n      .then(response => {\n        console.log('hi', response)\n        if (response) {\n          this.displayFaceBox(this.calculateFaceLocation(response));\n        } else {\n          console.error('Clarifai API error:', response.status.description);\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = () => {\n    this.setState({route: 'home'})\n  }\n\n\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <ParticlesBg type=\"polygon\" bg={true} />\n        <Navigation onRouteChange={this.onRouteChange}/>\n        { this.state.route === 'signin'\n            ? <Signin onRouteChange={this.onRouteChange}/>\n            : <div>\n              <Logo />\n              <Rank />\n              <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n              </div>\n       }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}